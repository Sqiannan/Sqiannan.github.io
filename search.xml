<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS的块级元素、行内元素和行内块元素</title>
    <url>/2020/07/03/CSS%E7%9A%84%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0/</url>
    <content><![CDATA[<p>元素是文档结构的基础，不同的元素显示方式是不同的，块级元素独自占据一行，行内元素可多个放置在一行。</p>
<a id="more"></a>
<h2 id="块级元素-block"><a href="#块级元素-block" class="headerlink" title="块级元素 block"></a>块级元素 block</h2><p>可以自定义宽度和高度，独自占据一行，默认宽度为父元素宽度，可以容纳块级元素和行内元素。<br>常见的块级元素有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;address&gt;<br>&lt;caption&gt;<br>&lt;dd&gt;<br>&lt;div&gt;<br>&lt;h1&gt;~&lt;h6&gt;<br>&lt;ol&gt;<br>&lt;ul&gt;<br>&lt;li&gt;<br>&lt;table&gt;<br></code></pre></td></tr></table></figure>
<h2 id="行内元素-inline"><a href="#行内元素-inline" class="headerlink" title="行内元素 inline"></a>行内元素 inline</h2><p>不可以设置宽度和高度，可以和其他行内元素位于同一行，一般不可以包含块级元素。<br>高度一般由元素内部的字体或图片大小决定，宽度由内容的长度决定，高度、宽度、行高、顶部和底部边距不可设置。<br>常见的行内元素有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;a&gt;<br>&lt;b&gt;   &#x2F;&#x2F;字体加粗<br>&lt;i&gt;   &#x2F;&#x2F;斜体文字效果<br>&lt;br&gt;  <br>&lt;img&gt;<br>&lt;input&gt;<br>&lt;span&gt;<br>&lt;textarea&gt;<br></code></pre></td></tr></table></figure>
<h2 id="行内块级元素-inline-block"><a href="#行内块级元素-inline-block" class="headerlink" title="行内块级元素 inline-block"></a>行内块级元素 inline-block</h2><p>既有块级元素特点又有行内元素特点，可以自由设置元素宽度和高度，也可以一行放置多个行内块级元素。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;input&gt;<br>&lt;img&gt;<br></code></pre></td></tr></table></figure>
<h2 id="元素类型转换display"><a href="#元素类型转换display" class="headerlink" title="元素类型转换display"></a>元素类型转换display</h2><p>display:block  定义元素为块级元素<br>display:inline  定义元素为行内元素<br>display:inline-block  定义元素为行内块级元素</p>
]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue的条件判断</title>
    <url>/2020/07/04/Vue%E7%9A%84%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93/</url>
    <content><![CDATA[<p>Vue中的条件判断有v-if、v-else、v-else-if，下面介绍一下条件判断并做一个小案例。</p>
<a id="more"></a>
<h2 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h2><p>v-if判断一个元素是否渲染，当条件为true时渲染，为false时不会有对应的元素出现在DOM中，可以将data中的isShow分别设置为true和false试一下效果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;body&gt;<br>  &lt;div id&#x3D;&quot;app&quot;&gt;<br>    &lt;h1 v-if&#x3D;&quot;isShow&quot;&gt;&#123;&#123;message&#125;&#125;&lt;&#x2F;h1&gt;<br>  &lt;&#x2F;div&gt;<br>  &lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;<br>  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;<br>     const app &#x3D; new Vue(&#123;<br>     el: &#39;#app&#39;,<br>       data: &#123;<br>         message:&#39;你好&#39;,<br>         isShow:true<br>       &#125;<br>    &#125;)<br>  &lt;&#x2F;script&gt;<br>&lt;&#x2F;body&gt;<br></code></pre></td></tr></table></figure>
<h2 id="v-if和v-else结合使用"><a href="#v-if和v-else结合使用" class="headerlink" title="v-if和v-else结合使用"></a>v-if和v-else结合使用</h2><p>根据isShow的true和false值的不同显示不同内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;body&gt;<br>  &lt;div id&#x3D;&quot;app&quot;&gt;<br>    &lt;h1 v-if&#x3D;&quot;isShow&quot;&gt;&#123;&#123;message&#125;&#125;&lt;&#x2F;h1&gt;<br>    &lt;h1 v-else&gt;isShow为false显示&lt;&#x2F;h1&gt;<br>  &lt;&#x2F;div&gt;<br>  &lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;<br>  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;<br>    const app &#x3D; new Vue(&#123;<br>      el: &#39;#app&#39;,<br>      data: &#123;<br>        message:&#39;你好&#39;,<br>        isShow:false<br>      &#125;<br>    &#125;)<br>  &lt;&#x2F;script&gt;<br>&lt;&#x2F;body&gt;<br></code></pre></td></tr></table></figure>
<h2 id="v-if和v-else和v-else-if"><a href="#v-if和v-else和v-else-if" class="headerlink" title="v-if和v-else和v-else-if"></a>v-if和v-else和v-else-if</h2><p>第一种方法，适用于简单的判断，不常用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;body&gt;<br>  &lt;div id&#x3D;&quot;app&quot;&gt;<br>    &lt;h1 v-if&#x3D;&quot;score&gt;90&quot;&gt;优秀&lt;&#x2F;h1&gt;<br>    &lt;h1 v-else-if&#x3D;&quot;score&gt;80&quot;&gt;良好&lt;&#x2F;h1&gt;<br>    &lt;h1 v-else&gt;及格&lt;&#x2F;h1&gt;<br>  &lt;&#x2F;div&gt;<br>  &lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;<br>  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;<br>    const app &#x3D; new Vue(&#123;<br>      el: &#39;#app&#39;,<br>      data: &#123;<br>        score:90<br>      &#125;<br>    &#125;)<br>  &lt;&#x2F;script&gt;<br>&lt;&#x2F;body&gt;<br></code></pre></td></tr></table></figure>
<p>第二种方法 ，使用computed，适用于复杂判断</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;body&gt;<br>  &lt;div id&#x3D;&quot;app&quot;&gt;<br>    &lt;h1&gt;&#123;&#123;result&#125;&#125;&lt;&#x2F;h1&gt;<br>  &lt;&#x2F;div&gt;<br>  &lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;<br>  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;<br>    const app &#x3D; new Vue(&#123;<br>      el: &#39;#app&#39;,<br>      data: &#123;<br>        score:90<br>      &#125;,<br>      computed:&#123;<br>       result()&#123;<br>        let showScore&#x3D;&#39;&#39;;<br>        if(this.score&gt;90)&#123;<br>          showScore&#x3D;&quot;优秀&quot;<br>        &#125;<br>        else if(this.score&gt;80)&#123;<br>          showScore&#x3D;&quot;良好&quot;<br>        &#125;<br>        else&#123;<br>          showScore&#x3D;&quot;及格&quot;<br>        &#125;<br>        return showScore<br>        &#125;<br>      &#125;<br>    &#125;)<br>  &lt;&#x2F;script&gt;<br>&lt;&#x2F;body&gt;<br></code></pre></td></tr></table></figure>
<h2 id="登录切换小案例"><a href="#登录切换小案例" class="headerlink" title="登录切换小案例"></a>登录切换小案例</h2><p>点击按钮切换输入框的类型，分别是输入账号或输入邮箱<br><img src="/yilia/source/fonts/img/%E5%88%87%E6%8D%A2input%E5%B0%8F%E6%A1%88%E4%BE%8B.mp4" alt="avatar"></p>
]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客绑定自己域名</title>
    <url>/2020/06/30/hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<p>1、在自己博客根目录下找到source文件，新建一个CNAME文件，没有任何后缀，写上自己的域名。<br>2、在git bash输入hexo d，重新部署到github。<br>3、在github上打开个人博客，点击Settings，下拉找到GitHub Pages，在Custom Chooser输入自己的域名，点击Save。</p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>前端知识</title>
    <url>/2020/06/30/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
    <content><![CDATA[<p><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions" target="_blank" rel="noopener">https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions</a></p>
]]></content>
  </entry>
  <entry>
    <title>markdown代码块高亮提示</title>
    <url>/2020/06/29/disanpian/</url>
    <content><![CDATA[<p>三种方法</p>
<a id="more"></a>
<p>第一种：</p>
<pre><code>&lt;pro&gt;&lt;code&gt;代码&lt;/code&gt;&lt;/pro&gt;</code></pre><p>第二种：</p>
<pre><code>```代码类型 （代码）```</code></pre><p>第三种：</p>
<p>空一行<br>(4个空格)代码</p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS的布局方法</title>
    <url>/2020/06/25/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>两列布局（左固定，右自适应和左自适应，右固定）和三列布局（两侧定宽，中间自适应）</p>
<a id="more"></a>
<h2 id="1、-两列布局："><a href="#1、-两列布局：" class="headerlink" title="1、    两列布局："></a>1、    两列布局：</h2><p>1.1    左边宽度固定，右边宽度自适应<br>第一种方法：左边设置浮动，右边设置margin-left<br>Js代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html">.left&#123; <br>  width: 400px;<br>  height:100px;<br>  background-color: red;<br>  float:left;<br>&#125;<br>.right&#123;<br>  background-color: blue;<br>  margin-left: 400px;<br>  height:100px;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>Html代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"outer"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"left"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure>
<p>第二种方法：设置相对定位和绝对定位</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html">.outer&#123; <br>  height:100px;<br>  position:relative;<br>  border: 1px solid red;<br>&#125;<br>.left&#123;<br>  position: absolute;<br>  left: 0;<br>  top: 0;<br>  width: 200px;<br>  height: 100px;<br>  background-color: antiquewhite;<br>&#125;<br>.right&#123;<br>  margin-left: 200px;<br>  height: 100px;<br>  background-color: aquamarine;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>1.2    右边宽度固定，左边宽度自适应：<br>第一种：左右都浮动</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html">.left&#123;<br>  height:100px;<br>  width: 100%;<br>  background-color: aqua;<br>  float: left;<br>  margin-right: -400px;<br>&#125;<br>.right&#123; <br>  width: 400px;<br>  height: 100px;<br>  background-color:blue;<br>  float: right;<br>  margin-left: -400px;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>第二种：父元素相对，右边绝对，左边margin-right</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html">.outer&#123;<br>  position: relative;<br>&#125;<br>.left&#123;<br>  margin-right: 400px;<br>  height: 300px;<br>  background-color: red;<br>&#125;<br>.right&#123;<br>  position: absolute;<br>  top: 0;<br>  right: 0;<br>  height: 300px;<br>  width: 400px;<br>  background-color: blue;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="2、-三栏"><a href="#2、-三栏" class="headerlink" title="2、    三栏"></a>2、    三栏</h2><p>2.1 两侧定宽，中间自适应<br>第一种方法：左右设置为绝对定位，中间使用margin属性设置留出左右两边的距离，中间设置为100%</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html">*&#123;<br>  margin: 0;<br>&#125;<br>.left&#123;<br>  width: 100px;<br>  height: 400px;<br>  background-color: red;<br>  position: absolute;<br>  top: 0;<br>  left: 0;<br>&#125;<br>.center&#123;<br>  margin: 0 100px;  <br>  height: 400px; <br>  width: 100%;<br>  background-color: #000000;<br>&#125;<br>.right&#123;<br>  width: 100px;<br>  height: 400px;<br>  background-color: red;<br>  position: absolute;<br>  top: 0;<br>  right: 0;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>Html代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"left"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"center"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure>
<p>第二种方法：左边左浮动，右边右浮动，中间设置margin，html代码里面中间栏是最后一个。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html">.left&#123; <br>  width: 100px;<br>  height: 400px;<br>  background-color: red;<br>  float: left;<br>&#125;<br>.center&#123;<br>  height: 400px;<br>  width: 100%;<br>  background-color: #000000;<br>  margin:0 100px;<br>&#125;<br>.right&#123;<br>  width: 100px;<br>  height: 400px;<br>  background-color: red;<br>  float: right;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>html代码：</p>
<pre><code class="html"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>
<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>
<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></code></pre>
]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>事件冒泡</title>
    <url>/2020/07/01/%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo yilia 博客增加菜单分类</title>
    <url>/2020/06/28/%E6%88%91%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>基于hexo+yilia主题搭建的博客，如果要添加菜单分类，需要在根目录下执行new page “分类名字”，然后在根目录下的_config.yml文件中的menu下添加类名。</p>
<a id="more"></a>
<p>具体步骤：</p>
<ol>
<li>创建分类名字<br>在根目录下执行<code>git bash</code>，输入<code>hexo new page</code> “学习笔记”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">sqiannan@DESKTOP-TPIHHKM MINGW64 &#x2F;d&#x2F;blog<br>$ hexo page &quot;学习笔记&quot;<br></code></pre></td></tr></table></figure>
<ol start="2">
<li>修改_config.yml<br>打开themes_config.yml，在menu下添加学习笔记: \tags\学习笔记</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain"># Header<br>menu:<br>  主页: &#x2F;<br>  随笔: &#x2F;tags&#x2F;随笔&#x2F;<br>  学习笔记: &#x2F;tags&#x2F;学习笔记&#x2F;<br></code></pre></td></tr></table></figure>
<ol start="3">
<li>添加文章的tags<br>打开自己的文章，在头部的tags: 后添加类名</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">---<br>title: hexo yilia 博客增加菜单分类<br>date: 2020-06-28 15:24:30<br>description: hexo yilia 博客增加菜单分类<br>tags:<br>       - 学习笔记<br>---<br></code></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
